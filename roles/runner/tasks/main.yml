- name: Ensure runner user exists
  user:
    name: github
    state: present
    shell: /bin/bash
    create_home: yes
  become: yes

- name: Ensure .ssh directory exists for github user
  file:
    path: /home/github/.ssh
    state: directory
    owner: github
    group: github
    mode: '0700'
  become: yes

- name: Copy runner private key from environment variable
  copy:
    content: "{{ lookup('env','RUNNER_SSH_PRIVATE_KEY') }}"
    dest: /home/github/.ssh/id_rsa
    owner: github
    group: github
    mode: '0600'
  become: yes

- name: Generate public key from private key
  shell: ssh-keygen -y -f /home/github/.ssh/id_rsa > /home/github/.ssh/id_rsa.pub
  args:
    creates: /home/github/.ssh/id_rsa.pub
  become: yes
  become_user: github

- name: Update apt cache
  apt:
    update_cache: yes
  become: yes

- name: Ensure unzip is installed
  apt:
    name: unzip
    state: present
  become: yes

- name: Ensure Ansible is installed
  apt:
    name: ansible
    state: present
  become: yes

- name: Download Terraform
  get_url:
    url: "https://releases.hashicorp.com/terraform/1.13.3/terraform_1.13.3_linux_amd64.zip"
    dest: /tmp/terraform.zip
    mode: '0644'
  become: yes

- name: Unzip Terraform
  unarchive:
    src: /tmp/terraform.zip
    dest: /usr/local/bin/
    remote_src: yes
    mode: '0755'
  become: yes

- name: Create runner directory
  file:
    path: /opt/github-runner
    state: directory
    owner: github
    group: github
    mode: '0755'
  become: yes

- name: Download GitHub Actions runner
  get_url:
    url: "https://github.com/actions/runner/releases/download/v2.328.0/actions-runner-linux-x64-2.328.0.tar.gz"
    dest: /opt/github-runner/actions-runner.tar.gz
    mode: '0644'
  become: yes

- name: Extract GitHub Actions runner
  unarchive:
    src: /opt/github-runner/actions-runner.tar.gz
    dest: /opt/github-runner
    remote_src: yes
    owner: github
    group: github
  become: yes

- name: Configure self-hosted runner (idempotent)
  shell: ./config.sh --url https://github.com/pmozdzynski/automation_demo --token "{{ lookup('env','GITHUB_RUNNER_TOKEN') }}" --unattended --replace
  args:
    chdir: /opt/github-runner
    creates: /opt/github-runner/.runner
  become: yes
  become_user: github

- name: Check if runner service already exists
  stat:
    path: /etc/systemd/system/actions.runner.pmozdzynski-automation_demo.github-runner.service
  register: runner_service
  become: yes

- name: Install runner service (must run as root)
  shell: ./svc.sh install
  args:
    chdir: /opt/github-runner
  become: yes
  when: not runner_service.stat.exists

- name: Start runner service (must run as root)
  shell: ./svc.sh start
  args:
    chdir: /opt/github-runner
  become: yes
