name: Infrastructure Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  provision:
    name: Provision Hetzner + Deploy App
    runs-on: self-hosted

    env:
      HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
      HETZNER_RUNNER_KEY: ${{ secrets.HETZNER_RUNNER_KEY }}
      ANSIBLE_HOST_KEY_CHECKING: "False"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH for Ansible
        run: |
          mkdir -p ~/.ssh
          echo "$HETZNER_RUNNER_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub

      - name: Setup Terraform State Directory
        run: |
          mkdir -p $HOME/terraform-state
          cd $HOME/terraform-state
          # Copy Terraform files to state directory
          cp -r $GITHUB_WORKSPACE/* .

      - name: Backup Existing State (if exists)
        run: |
          cd $HOME/terraform-state
          if [ -f terraform.tfstate ]; then
            cp terraform.tfstate terraform.tfstate.backup.$(date +%Y%m%d_%H%M%S)
            echo "State file backed up"
          else
            echo "No existing state file found"
          fi

      - name: Terraform Init
        run: terraform init
        working-directory: $HOME/terraform-state

      - name: Terraform Validate
        run: terraform validate
        working-directory: $HOME/terraform-state

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: $HOME/terraform-state

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: $HOME/terraform-state

      - name: Copy Updated Inventory
        run: |
          cp $HOME/terraform-state/inventory $GITHUB_WORKSPACE/inventory

      - name: Run Ansible Playbook
        run: ansible-playbook -i inventory playbook.yaml

  destroy:
    name: Destroy Infrastructure (manual)
    runs-on: self-hosted
    if: github.event_name == 'workflow_dispatch'
    env:
      HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
      HETZNER_RUNNER_KEY: ${{ secrets.HETZNER_RUNNER_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "$HETZNER_RUNNER_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub

      - name: Setup Terraform State Directory
        run: |
          mkdir -p $HOME/terraform-state
          cd $HOME/terraform-state
          # Copy Terraform files to state directory
          cp -r $GITHUB_WORKSPACE/* .

      - name: Backup State Before Destroy
        run: |
          cd $HOME/terraform-state
          if [ -f terraform.tfstate ]; then
            cp terraform.tfstate terraform.tfstate.backup.destroy.$(date +%Y%m%d_%H%M%S)
            echo "State file backed up before destroy"
          fi

      - name: Terraform Init
        run: terraform init
        working-directory: $HOME/terraform-state

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: $HOME/terraform-state

